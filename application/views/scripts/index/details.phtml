<?php

include_once '../application/controllers/IndexController.php';
$current_model=null;
function removevarenummer($str){
	$rem = "Varenummer:�";
	//$rem = "Varenummer:";
	return trim(str_ireplace($rem,'',$str));
}

function getPartName($long_name){
	$short_names = explode(' ',$long_name);
/*	echo ' <br/>$long_name =  '.$long_name;
	echo ' <br/>$long_name  => 1 '.$short_names[1];
	echo ' <br/>$long_name  => 0 '.$short_names[0];*/
	return $short_names[0];
}



function extractDetailedTitleTag($view,$spp){
	$t=$view->headTitle();
	if($spp->Producer_make_name){
		$t->append($spp->Producer_make_name.' '.$spp->Name.' '.$spp->Producer_part_number);
		if($spp->Original_part_number){
			$t->append(' '.$spp->Original_part_number);
		return;
		}
	}
	if($spp->Original_part_number){
		$t->append($spp->Name.' '.$spp->Original_part_number);
		//TODO Find all cars it matches, and show .. EG. Volvo/Mitshubitch or AUDI/VV/SEAT/SKODA"
		//Iterate through car_models_to_spare_part_prices;
		return;
	}	
	if($spp->Supplier_part_number){
		$t->append($spp->Name.' '.$spp->Supplier_part_number);
		//TODO Find all cars it matches, and show .. EG. Volvo/Mitshubitch or AUDI/VV/SEAT/SKODA"
		//Iterate through car_models_to_spare_part_prices;
	}
}

function price_format($number){
	return number_format($number,2,',', '.').' kr';
}

	$row_count=0;
function mktr($key,$val){
	global $row_count;
	$class="";
	
	if($val==""){
		$val="<span class='bdp_unknown_value'>(ikke oplyst)<span>";
	}
	if($row_count++&1){
		$class = 'bdp_td_alt_odd';
	}else{
		$class = 'bdp_td_alt_even';
	}
	return '<tr><td class="'.$class.'" >'.$key.'</td><td style="text-align:right"  class="'.$class.'" >'
		.//$this->dkText
		($val).'</td></tr>'; //Make proper table with alternating rows;
}
$spp = $this->spare_part_price;
if($this->no_show_message){
	echo "<div class='forward_message' >$this->no_show_message</div>";
}
else{
$spp instanceof Default_Model_SparePartPrices
	or error('SPP var ikke sat og ikke af den rigtige type.'||gettype($spp));	

extractDetailedTitleTag($this,$spp);
$link_start='<a href="'.$spp->Spare_part_url.'" target="_new" title="link til varen hos butikken" >';
$link_start='<a href="/index/jump_to/spare_part_price_id/'.$spp->getSpare_part_price_id().'" target="_new" title="link til varen hos butikken" >';
$table = '<table class="bdp_table_price" >'
	.mktr('Navn',$spp->Name)
	.mktr('Beskrivelse',$spp->Description) // was this->escape - but it should not be so. 
	// the database must contain HTML ready chars i.e. &Oeslash and not �
	.mktr('Placering',$spp->Part_placement)
	.mktr('Kategori',$spp->Spare_part_category_free_text)
	.mktr('Butikkens varenr.',$spp->Supplier_part_number)
	.mktr('Originalt varenr.',$spp->Original_part_number)
	.mktr('Producent',$spp->Producer_make_name)
	.mktr('Producentens varenr.',$spp->Producer_part_number)
	.mktr('Pris (inkl.moms)',price_format($spp->Price_inc_vat))
	.mktr('Vis hos butik',$link_start.$spp->Name.'</a>')
	.'</tr></table>';
//echo $table;
$img_src = FixUrl($spp->spare_part_image_url,'img',$spp);
//die($img_src);
$img = '<center><h2>Butikkens billede</h2><img onerror="report_img_broken(this);" src="'.$img_src.'" style="padding:20px;margin:20px;border:5px solid orange;" alt="Butikkens billede af '.$spp->Name.'" title="Titel" height="200px" width="200px"  ></center>';
$tbody = utf8_encode(mktr($table,$img));
$name = utf8_encode($spp->Name);
$combined = $spp->Name.$spp->Description.$spp->getProducer_part_number();
function is_utferror(){

}

function is_utf8($str) {
	echo "<hr>checking $str"; 
    $c=0; $b=0;
    $bits=0;
    $len=strlen($str);
    for($i=0; $i<$len; $i++){
        $c=ord($str[$i]);
        echo "<br>BIN".decbin($c).' - '.$str[$i].' - '.$c.' hex ';
        if($c > 128){
            if(($c >= 254)) return false;
            elseif($c >= 252) $bits=6;
            elseif($c >= 248) $bits=5;
            elseif($c >= 240) $bits=4;
            elseif($c >= 224) $bits=3;
            elseif($c >= 192) $bits=2;
            else return false;
            if(($i+$bits) > $len) return false;
            while($bits > 1){
                $i++;
                $b=ord($str[$i]);
                if($b < 128 || $b > 191) return false;
                $bits--;
            }
        }
    }
    return true;
}

echo "<h3>Alle detaljer for</h3><div class='bdp_price_all_details' ><h1>$name</h1><table>$tbody</table></div>";
/* '_name' => NULL,
   '_description' => NULL,
   '_spare_part_url' => NULL,
   '_spare_part_image_url' => NULL,
   '_spare_part_category_id' => NULL,
   '_spare_part_category_free_text' => NULL,
   '_part_placement' => NULL,
   '_part_placement_left_right' => NULL,
   '_part_placement_front_back' => NULL,
   '_supplier_part_number' => NULL,
   '_original_part_number' => NULL,
   '_price_inc_vat' => NULL,
   '_producer_make_name' => NULL,
   '_producer_part_number' => NULL,
   '_spare_part_supplier_id' => NULL,
   '_created' => NULL,
   '_created_by' => NULL,
   '_updated' => NULL,
   '_updated_by' => NULL,
   '_mapper'  */
$Cmo2Spps = $spp->getCmo2Spp();
is_array($Cmo2Spps) 
	or error("The spareprice ".$spp->spare_part_price_id.' did not contain models'.print_r($models));
$tbody = '<tr><th class="bdp_price_all_details" >Denne vare passer til</th></tr>'; 
//
//$cmo_mapper = new Default_Model_CarModelsMapper();
$cmo_mapper = MapperFactory::getCmoMapper();
//$cmo_mapper->fillRowCacheIfEmpty(100000,' 1 ');
//Zend_Debug::dump($cmo_mapper,'CMO Mapper',true);
$first_model=null;
foreach ($Cmo2Spps as $cmm2spp){	
	   		$cmm2spp instanceof Default_Model_CarModelsToSparePartPrices
   				or error("instance was not a type Default_Model_CarModelsToSparePartPrices ");
   			$car_model_id = $cmm2spp->getCar_model_id();
   			//$model = $cmo_mapper->findObject($car_model_id);
   			$car_model_id > 0 or error("Car_model_id was '$car_model_id' - it must be a positive number ");
   			$model_ar = $cmo_mapper->find($car_model_id)->current()->toArray();   			
   			$model = new Default_Model_CarModels($model_ar);
   			$model instanceof Default_Model_CarModels
   				or error("instance was not a type Default_Model_CarModels ");
	if($this->car_model_id==null){
		$this->car_model_id = $model->_car_model_id;
		$first_model = $model;
	}	
	if($this->car_model_id == $model->_car_model_id){
		$current_model = $model;		
	}
	$full_name = $model->car_make_name.' '.$model->car_model_name;
	$make_url = '/index/brands/brand/'.$model->car_make_name.'/car_make_id/'.$model->car_make_id;
	$model_url = $make_url. '/car_model_id/'.$model->car_model_id.'/car_model_name/'.$model->car_model_name; 
	 $tbody.='<tr><td>'
	 .'<a href="'.$make_url.'" title="Se alle reservedele til '.$model->car_make_name.'" >'
	.$model->car_make_name.'</a> ' ///index/brands/brand/Alfa%20Romeo/car_make_id/101
	.'<a href="'.$model_url.'" title="Se alle reservedele til '.$full_name.'" >'
	.$model->car_model_name.'</a> '
	.'</td></tr>';
}
echo "<table><tr><td valign='top' ><table id='details_all_models' class='bdp_price_all_details' >$tbody</table></td><td valign='top'>";

if($this->car_model_id!=null){
	$searcher = new Default_Model_SparePartPriceSearcer($this->car_model_id);
//	$all_names = $searcher->allNames();	
//	$this->view->all_names = $all_names;
	//echo "Bildele til $car_model_id ";
	//die(nl2br(var_dump($all_names)));
	if(!$current_model){		
		$current_model = $first_model;
		if($current_model)
			echo "<!-- the current model was set using the loop and first_model($this->car_model_id) "
			.$current_model->getMakeAndModelName()." -->";
	}
	if(!$current_model){
		$current_model = $cmo_mapper->findObject($this->car_model_id);
		if($current_model == null)
			error("Current model was null");
		if(!$current_model instanceof Default_Model_CarModels)
			error("Current model was a ".get_class($current_model));
		echo "<!-- the current model was set using findObject($this->car_model_id) = ".$current_model->getMakeAndModelName()." -->";		
	}
	$searcher->_car_model_id = $current_model->getCar_model_main_id();
	if($searcher->_car_model_id == null){
		$searcher->_car_model_id = $current_model->getCar_model_id();
	}
	$prices = $searcher->runSearch(getPartName(utf8_encode($spp->name)));
	$table = '<table id="details_all_prices" class="bdp_price_all_details" >'
			.'<tr><th class="bdp_price_all_details" colspan="3" >'
				.'Alle '.getPartName(utf8_encode($spp->name))
				.' til '.$current_model->getMakeAndModelName()
			.'</th></tr>';
	Zend_View_Helper_SparePartPricePrinter::$car_model_id = $this->car_model_id;
	$spp_printer = new Zend_View_Helper_SparePartPricePrinter();
	$sps_obj = new Default_Model_SparePartSuppliers();
	if(is_array($prices))
		foreach($prices as $price){		
			$spp_obj =  $sps_obj->getCachedById($price['spare_part_supplier_id']);
			//print implode((get_class_methods(get_class($spp_obj))),'<br/>');
			$spp_link = $this->extLink('', $spp_obj->supplier_name ,'_anoter_window','Gå til leverandøren');
			$sps_link_start = '<a href="/index/details/spare_part_price_id/'.$price['spare_part_price_id'].'">';
			$line = '<tr><td>'. utf8::right_code($sps_link_start.$price['name']).'</a>'
				.'</td><td align="right" >'.$spp_printer->dk_amount($price['price_inc_vat'])
				.'</td><td>'.$spp_link//.var_export($spp_row,true)	
				.'</td></tr>';
			$table .= $line;
		}
	else{ // no prices found
		$table.= "<tr><td>Ingen andre priser</td></tr>";
	}
	echo ($table).'</table>';
	/*		
	if(array_key_exists('q',$this->view->params)){
		$q = $this->view->params['q'];
		$this->view->q = $q;
		$this->view->prices = $prices;
	}*/
}
else{
   echo 'Ingen model information fundet';
}
echo "</td></tr></table>";
}