<?php
$this->headMeta()->appendHttpEquiv('Content-Type','text/html; charset=utf-8');
/*$this->dojo()->requireModule("dojox.data.QueryReadStore")
			 ->requireModule("dojox.grid.DataGrid")
			 ->requireModule("dojo.data.ItemFileReadStore")
                         ->requireModule("dijit.form.TextBox")
			;

// Define a new data store class, and 
// setup our autocompleter data store
	//$this->dojo()->javascriptCaptureStart() 
	?>
	// In view scrip index.phtml
/*	dojo.provide("custom.AutocompleteReadStore");
	dojo.declare(
	    "custom.AutocompleteReadStore", 
	    dojox.data.QueryReadStore, 
	    {
	        fetch: function(request) {
	            request.serverQuery = {q: request.query.name};
	            return this.inherited("fetch", arguments);
	        }
	    }
	);  
	
	*/
//http://www.javascriptkit.com/javatutors/languageattri3.shtml on JavaScript 1.5
?>
<script type="text/javascript" language="JavaScript" >
var autocompleter_car_models;
var autocompleter_car_makes;
var js_fs1_car_model;
var js_fs1_car_make;
var selected_car_make_id;
var selected_car_make_name;
var selected_car_model_id;
var selected_car_model_name;
var results_store
var current_ds_url;
var tableGrid;
var tableGridState = "uninitialized";
var pending_ds_url;
var targetSelect;
var btn_find;
var div_bdp_results;
var init_state=0;

var target_select_event = function(){
	alert ("dyn func");	
}

function error(message){
	myInfo("Error " + message);	
}

function getQ(){
	var txt = document.getElementById('tx_free_text_search');
	if(txt){
		return txt.value;
	}
	else{
		error("Unable to fetch 'tx_free_text_search' ");
	}	
}

function getBtnFind(){
	if(!(btn_find))
		btn_find = document.forms['HtmlSearch'].elements['btn_find'];
	if(btn_find)
		return btn_find;
	else
		error("could not find btn_find button() ");	
}

function setResultsDivText(text){
	var msg = "null";
	if(text)
		msg = text;
	var d  = getResultsDiv();
	d.innerHTML = msg ;
}


function getResultsDiv(){
	var div = document.getElementById('divbdpresults');
	if(div && div.nodeName=="DIV"){
		return div;
	}
	else{
		error("Unable to fetch 'div-bdp-results' ");
	}	
}

function get_selected_model(){
	var model_select = document.forms['HtmlSearch'].elements['model_select'];
	selected_car_model_id = model_select.value;
	if(selected_car_model_id)
		if(selected_car_model_id > 0)
			return selected_car_model_id;
		else
			error("Selected car model was lesss than 0 "+selected_car_model_id);
	else
		error("Selected car model was undefined");
}

function update_results(xmlreply, modelSelect) {
	div_bdp_results = getResultsDiv();
	myInfo("in_update_results");
	var q=getQ();
	var headline = "Søgeresultater med '"+q+"' ";
	if(q == ''){
		headline = "Søgning uden filter. \n(indtast evt. søge filter i boksen 'Varenavn')";		
	}
	if(getQ()==""){
		"Alle reservedele";
	}
	if (xmlreply.status == Http.Status.OK) {
		if(div_bdp_results){
			setResultsDivText("<h2>"+headline+"</h2>" + xmlreply.responseText);
		}
		else
			error("div_bdp_results was not set?");
	} else {
		alert('Cannot handle the AJAX call. - update_results');
	}
}

function update_div(url){
	if(!(div_bdp_results)){
		alert("div-bdp-results div not found");
		return;
	}
	myInfo("update-div-"+url);
}

function btn_find_onclick(){
	setResultsDivText("Søgning efter priser..");
	//getBtnFind().disabled = true;
	var targetSelect = document.forms['HtmlSearch'].elements['model_select'];
	var q = '/q/'+getQ();		
	if(targetSelect == null){
		alert("Target select was null");
	}
	var selectedVal = get_selected_model();
	if (selectedVal != '') {
		var w_url = '/index/newsearch/car_model_id/' + selectedVal + q;
		myInfo("Url was " +w_url)
		Http.get({
			url: w_url ,
			callback: update_results,
			cache: Http.Cache.Get
		}, [targetSelect]);
	} else {
		targetSelect.disabled = true;
		error("Ajax error");
		//document.forms['HtmlSearch'].elements['submodel'].style.display = 'none';
	}	
}


function body_on_load(){
	if(init_state>2){
		return; // already run.
	}
   init_state=1;	
   makeSelect = document.forms['HtmlSearch'].elements['make_select'];
   handleBrandChange(makeSelect);
   modelSelect = document.forms['HtmlSearch'].elements['model_select'];
   modelSelectHidden = document.getElementById('model_select_hidden');
   if(modelSelectHidden.value!='')
   		modelSelect.selectedIndex =	modelSelectHidden.value;
   btn_find = document.forms['HtmlSearch'].elements['btn_find'];
   div_bdp_results = getResultsDiv();
   init_state++;
   btn_find.onclick = function(){
		btn_find_onclick();
	}; 
	var fnc_change_handler = function(){
		   modelSelect = document.forms['HtmlSearch'].elements['model_select'];
		   modelSelectHidden = document.getElementById('model_select_hidden');
		   if(modelSelect.selectedIndex != 0)
		   	 modelSelectHidden.value = modelSelect.selectedIndex;
		   var car_model_name = modelSelect.options[modelSelect.selectedIndex].text;
		   var car_model_id = modelSelect.options[modelSelect.selectedIndex].value;
		   even_model_select_changed(car_model_id,car_model_name);
	};
		   
	modelSelect.onchange = fnc_change_handler;
	modelSelect.onblur = fnc_change_handler;
	init_state++;
}

document.body.onload = body_on_load;
document.body.onkeypress=checkKeyDown;

function even_model_select_changed(car_model_id,car_model_name){
	//alert('changed to '+car_model_id+' : '+car_model_name);
	// save model id on user via cookie
	var w_url = '/index/selected-prices-pr-model/car_model_id/'+car_model_id
	var elem = document.getElementById('selected-prices-for-model');
	Http.get({
		url: w_url ,
		callback: update_element,
		cache: Http.Cache.Get
	}, [elem]);
}

function update_element(xmlreply, element) {
	if (xmlreply.status == Http.Status.OK) {
		if(element){
			element.innerHTML = xmlreply.responseText;
		}
		else
			error("element can not be set");
	} else {
		alert('Cannot handle the AJAX call. - update_element');
	}
}

function checkKeyDown(evt){
	if(!evt)
		return;
	if(evt.keyCode == 13) {         
		try {            
			//document.getElementById('mainform').submit();  
			btn_find_onclick();    
			  } 
		catch (err) { 
			                 }
		return false;
	}
	if(evt.keyCode == 9){
		var targetSelect = document.forms['HtmlSearch'].elements['model_select'];
		if(targetSelect == null){
			alert("Target select was null");
			targetSelect.focus();
		}
	}
	
}

function handleBrandChange(dropdown,mode) {
	var async_flag = true;
	if(mode == 'sync'){ async_flag = false;	}
	var targetSelect = document.forms['HtmlSearch'].elements['model_select'];
	if(targetSelect == null){
		alert("Target select was null");
		return;
	}
	var selectedVal = dropdown[dropdown.selectedIndex].value;
	if(init_state==0){
		myInfo("Init state was 0 ");
		dropdown[dropdown.selectedIndex].value = selectedVal;
		body_on_load();
	}
	if(init_state==0){
		error("Init state was 0 after second try");
	}
	myInfo("Selected val was "+selectedVal);
	if (selectedVal != 0) {
		targetSelect.disabled = true;
		// for submodels  // document.forms['HtmlSearch'].elements['submodel'].style.display = 'none';
		Http.get({
//			url: '/ajax.php?op=brandChange&bid=' + selectedVal,
			url: '/index/autocompletecarmodels/car_make_id/' + selectedVal,
			callback: fillModelSelect,
			cache: Http.Cache.Get,
			async: async_flag
		}, [targetSelect]);
	} else {
		targetSelect.disabled = true;
	}
}

function fillModelSelect(xmlreply, modelSelect) {
	if (xmlreply.status == Http.Status.OK) {
		var xmlDoc = xmlreply.responseXML;
		var JSON_text = xmlreply.responseText;
		var myObject = eval('(' + JSON_text + ')');
		// JSON Inspiration - http://www.json.org/js.html
		if(myObject == null){
			alert("JSON parsing did not work");
		}
		items = myObject.items;
		if (items.length > 0) {
			modelSelect.options.length = 0;
			modelSelect.length = items.length+1;
			modelSelect[0].text = 'Alle modeller';
			modelSelect.disabled = false;
			var item;
			for (i = 0; i < items.length; i++) {
				item = items[i];
				modelSelect.length++;
				modelSelect[i+1].value = item.id;
				modelSelect[i+1].text = item.name;
			}
			modelSelect = document.getElementById('model_select');
			modelSelectHidden = document.getElementById('model_select_hidden');
			if(modelSelectHidden.value!='')
			   		modelSelect.selectedIndex =	modelSelectHidden.value;
		} else {
			document.body.innerHTML +="<br/>Child Nodes was null " + JSON_text;
			modelSelect.disabled = true;
			modelSelect.length = 1;
			modelSelect[0].text = '-Vælg først mærke';
		}
	} else {
		//alert('Cannot handle the AJAX call.'+xmlreply.responseText);
	}
}


function getFuncName(f){
    var s= f.tostring().match(/function (\w*)/)[1];
    if((s==null) || (s.length == 0)) return "anonumous()";
    return s+"()";
}

function getStackTrace(seperator){
    if(!seperator)
        seperator = "-";
    var s="";
    for(var a = arguments.caller;a != null; a = a.caller){
        console.log("In loop");
        s += getFuncName(a.callee) + seperator;
    }
    return s;
}

function myInfo(s){
	//document.body.innerHTML += "<br/>"+s;
	//d = getResultsDiv();
	//d.innerHTML =  s;
}
var setQandRun = function(new_q){
	//var new_q = link.value;
	var q_field = document.getElementById('tx_free_text_search');
	if(q_field){
		q_field.value = new_q;
	}	
	btn_find_onclick();
}

function fs1_car_make_changed(){
        myInfo("start");
	//alert("Inside fs1_car_make_changed ?  ");
	var new_car_make_id = dijit.byId('fs1_car_make').value;
	if(new_car_make_id != selected_car_make_id){
		// Time to delete the content of some vars
		selected_car_make_name = "";
		selected_car_model_id = "";
		selected_car_model_name ="";
		console.log("car_make_id changed from " + selected_car_make_id + " to " + new_car_make_id );
	}
	else{
		console.log("?? car_make_id DID NOT change from "  + selected_car_make_id  + " to " + new_car_make_id);
	}
	selected_car_make_id = new_car_make_id;
	try{
		set_car_model_id(selected_car_make_id);
	}
	catch(err){
		alert('some error');
	}
        myInfo("end");
}

function fs1_car_model_changed(){
    var new_car_model_id = dijit.byId('fs1_car_model').value;
    if(new_car_model_id != selected_car_model_id){
         console.log("car_model_id changed from " + selected_car_model_id + " to " + new_car_model_id);
         selected_car_model_id = new_car_model_id;
    }
}

function setMakeAndModel(car_make_id,car_model_id){
	var make_select = document.getElementById('make_select');
	HtmlSelect_SetByValue(make_select,car_make_id);
	//make_select.selectedIndex = make_select_new_index;
	handleBrandChange(make_select,'sync');
	var model_select = document.getElementById('model_select');
	HtmlSelect_SetByValue(model_select,car_model_id);
	model_select.onblur();
}

function HtmlSelect_SetByText(selectToSearch,searchText){
	var opt = selectToSearch.options;
	var o;
	for(var i=0;i<opt.length;i++){
		o = opt[i];
		if(o.text==searchText){
			selectToSearch.selectedIndex = i;
			return;
		}
	}	
}

function HtmlSelect_SetByValue(selectToSearch,searchValue){
	var opt = selectToSearch.options;
	var o;
	for(var i=0;i<opt.length;i++){
		o = opt[i];
		if(o.value==searchValue){
			selectToSearch.selectedIndex = i;
			return;
		}
	}	
}

function set_car_model_id(car_make_id){
	if(car_make_id == ""){
		alert("No car make defined");
		dijit.byId("fs1_car_model").attr({disabled:true});
		return;
		}
	dijit.byId("fs1_car_model").attr({disabled:false});

	var new_url = "/index/autocompletecarmodels/car_make_id/"+car_make_id;
        autocompleter_car_models = new custom.AutocompleteReadStore({
            url:	new_url
            ,requestMethod: "get"
        });

        if(!fs1_car_model){
            fs1_car_model = dijit.byId("fs1_car_model");
            console.log("Needed to find the 'fs1_car_model' by ID? ");
            if(!fs1_car_model){
                console.error("Unable to find the fs1_car_model");
                alert("Unable to find the fs1_car_model");
            }
            fs1_car_model.value = ""; // reset the value, since we changed the car_make
        }
	fs1_car_model.attr({     store: autocompleter_car_models      });

        /*if(!tx_free_text_search){
            console.log("Needed to find the "tx_free_text_search" by ID? ");
            tx_free_text_search = dijit.byId("tx_free_text_search");
            if(!tx_free_text_search){
                alert("Unable to find the tx_free_text_search control?");
            }
        }
	var q = tx_free_text_search.Value;	*/
	//update_iframe(q,car_model_id);
	//dijit.byId("resultsStore").refresh();
}

function update_iframe(name, car_model_id){
        console.log("Update_iframe  " + name + "," + car_model_id);
//alert("name: " + name + "\ncar_model_id:" + car_model_id);
//	dijit.byId("tx_free_text_search").src = "about:error";
	var  newurl = "/index/datasearchresults"
        if(!car_model_id && selected_car_model_id > 0){
            car_model_id = selected_car_model_id;
            console.log("setting car_model_id from selected " + car_model_id);
        }
        if(car_model_id){
		newurl += "/car_model_id/" + car_model_id ;
	}
        else
            { console.log(" car_model_id was empty ?? ");
            }
	if(name && name != "Skriv hvad du mangler" ){
		newurl += "/q/" + name;
	}
        else
            { console.log(" name was empty ?? ");}	//alert("new url " + newurl);
        if(!tableGrid)
            tableGrid = dijit.byId("tableGrid");
        if(!tableGrid)
            alert("Could not find tableGrid?");
        //tg.store.url = newurl;
        //
       // var new_store = new dojox.data.QueryReadStore({  url: newurl , query: {id:'*'}, method : get    });
       //var new_store = new dojox.data.QueryReadStore({  url: newurl });
       // var new_store = new dojo.data.ItemFileReadStore({  url: newurl    });
        //new_store.fetch();
        //var i = new_store.getItems();
        //var new_store = getDataSearchJson(car_model_id,q);
       // infoField = dojo.byId("InfoField");
       if(current_ds_url == newurl){
            console.log("The Url was already set to '"+newurl+"' - so I will not ask for it again");
            return;
       }
       if( tableGridState == "creatingReadstore"){
            pending_ds_url = newurl;
            console.log("The tableGridState was " +tableGridState+ "  - no start & pending_ds_url =  " + pending_ds_url);
            return;

       }
       current_ds_url = newurl;
    console.log("New url is "+newurl);
        tableGridState = "creatingReadstore";
    var new_store = new dojo.data.ItemFileReadStore({ url: newurl });
    console.log("DataStore updated");
            new_store.fetch({
                query: { id: '*' }
        }); // ends fetch call.
        try { tableGrid.setStore(new_store);
            console.log("Store set on the grid"); }
        catch(e)
        {
            console.log("Error while setting the store to the grid");
            console.log("Error when setting" + e);
        }
        if(pending_ds_url){
            console.log("There was a pending ds url, lets run the event handler again");
            pending_ds_url = null;
            btn_submitButton();
        }
        tableGridState = "complete";
}




/*
 * 
 var UpdateItemWriteStore = function(){
        jsonStore.fetch({
                query: { id: '*' }
        }); // ends fetch call.
} // ends function
*/
</script>
<div  class="tundra">
<table class='layout' >
	<tr><td style='width: 300px;' >

	<table class='bdp_std_table'  cellspacing="0" cellpadding="0" border="0" style="width: 100%;" summary=""  ><caption>Søg via Mærke og Model</caption>
		<tr><th>Vælg mærke og model</th></tr>
		<tr><td><?php echo $this->form ?></td></tr></table>
		
		</td><td style='width: 300px;' ><?= $this->list_of_cars?></td>
	<td style='width: 300px;' ><div id='selected-prices-for-model'></div></td>
</tr></table>
<!-- <div id="div-debug-info" style="width: 100%; height: 100px;"></>info</div>  -->
<!--span dojoType="dojox.data.QueryReadStore" id="myStore"
   jsId="myStore" url="/index/datasearchresults/"  query="{id: '*'}"  requestMethod="get">
</span-->
<center><div id="divbdpresults" name="divbdpresults" ></div></center>



</div>