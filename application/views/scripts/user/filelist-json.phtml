<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<LINK REL=StyleSheet HREF="/bdp/public/css/b2b_user.css" TYPE="text/css" MEDIA=screen>
<title>bildelspriser.dk - selvbetjening for butikker</title>
	<style type="text/css"   ></style>
</head>
<script language="JavaScript"  >
var g_slt;
var g_ifr_parse;
var g_path = "/user/procesfile";
var g_user = "/username/usr_a/password/1234";
g_user="";
var itemSelectedIndex=0;
var is_allowed_to_run = true;
var last_file_size = 0;
var last_start_time = 0;
var last_run_time = 0;
var last_processing_speed = 0;
//************************* stopwatch start********************************************
var ms = 0;
var state = 0;
var then;
function startstop() {
if (state == 0) {
state = 1;
then = new Date();
then.setTime(then.getTime() - ms);
} else {
state = 0;
now = new Date();
ms = now.getTime() - then.getTime();
document.stpw.time.value = ms;
   }
}

function start() {
	if (state == 0) { //not running
	state = 1; // start to run 
	then = new Date();
	then.setTime(then.getTime() - ms);
	} else {throw new exception("Was already running");
	   }
	}

function swreset() {
state = 0;
ms = 0;
document.stpw.time.value = ms;
}

function getTime() {
	if (state == 1)  {now = new Date();
	ms = now.getTime() - then.getTime();
	document.stpw.time.value = ms;
	   }
	 return ms;
	}

function display() {
//setTimeout("display();", 50);
if (state == 1)  {now = new Date();
ms = now.getTime() - then.getTime();
document.stpw.time.value = ms;
   }
}

function stopAndGet(){
	if(state == 0){ // not running
		return -1;
	}
	else{ // stop watch is running
		startstop();
		return getTime();
	}
		
}


// ************************* stopwatch end *************************


function getIfr(){
	g_ifr_parse =  document.getElementById('ifr_parse');
	if(g_ifr_parse)
		return g_ifr_parse;
	appendTa("Ifr_parse was not set");
}

var g_divForLogging = null;

function getDivForLogging(){
	//global g_divForLogging;
	if(!g_divForLogging){
		g_divForLogging =  document.getElementById('div_file_results');				
	}
	if(!g_divForLogging){
		error('It was not posible to find DivForLogging');
	}
	return g_divForLogging;
}

function render_elem_with_attributes(elem_name,attributes){
	var s_attributes = "";
	for(var key  in attributes){
		s_attributes += '  '+key+'="'+attributes[key]+'"';
	}	
	return '<'+elem_name+' '+s_attributes+'/>'; 
}

/*var test = render_elem_with_attributes('div',{id:'new_id',class:'new_class'});
alert('testing render_element '+test);*/

var g_current_open_div_obj = "";
function openDiv(new_div_obj_to_open){
	if(g_current_open_div_obj){
		g_current_open_div_obj.class = 'parse_history';
	}
	new_div_obj_to_open.class = 'parse_history_open';
	g_current_open_div_obj = new_div_obj_to_open;		
}


function addText(number,text){
	var main_div = getDivForLogging();
	var new_id = 'parse_item_'+number;
	main_div.innerHTML +=  render_elem_with_attributes('div',{id:new_id,class:'parse_history',onclick:'javascript:openDiv(this);'})
	var new_div = document.getElementById(new_id);
	if(!new_div)
		error("New Div Object not found with name "+new_id);
	new_div.innerHTML = text;
}


function iframeLoaded(){
	//appendTa("iframe loaded");
	var slt = document.getElementById("slt");
	if(!slt.option)
		return;
	var len = slt.options.length;
	var html = getIfr().contentDocument.documentElement.innerHTML; 
	//appendTa(html);
	var html_len = html.length ;
	var succes_pos = html.indexOf("ended without errors");
	if(succes_pos!=-1){
		appendTa("File Processing was a success");
		last_run_time = stopAndGet();
		last_processing_speed = last_file_size/last_run_time;	
	}
	else{
		if(html_len>100) {
			appendTa("FileProcessing did not report success - please inspect - contact support if need be");
			return;
		}
	}
	appendTa("The HTML was "+html_len + ' bytes and it was processed in ' 
			+ last_run_time/1000 + ' seconds '
			+ last_processing_speed*1000 + ' kB/s.');
	last_file_size = html_len;
	takeNextAndParse(false);	
}

function takeNextAndParse(full){
	if(!is_allowed_to_run){
		appendTa("I was cancelled after "+stopAndGet()+' ms.');
		return;		
	}
	slt = document.getElementById("slt");
	var len = slt.options.length;
	if(len>=itemSelectedIndex){
		var filename = slt.options[itemSelectedIndex].value;
		appendTa("File nr. "+len+" of "+1.0+itemSelectedIndex + ": Ready to load file " + filename);
		start();
		parseFile(filename,full); 
		itemSelectedIndex++;
	}
	else{
		appendTa(" ######### ALL PARSING DONE ########## ");
	}
}

function appendTa(str){
	var ta =  document.getElementById("ta");
	ta.value+="\n"+str;
	ta.scrollTop = ta.scrollHeight; 
}

function parseFile(finename,reset_status){
	g_ifr_parse = getIfr();
	var p = g_path + g_user + '/filename/' + finename+'/reset_status/'+reset_status+'/info.htm';
	appendTa(p);
	g_ifr_parse.src =  p;
//	g_ifr_parse.document.onload = iframeLoaded;
	
}

function parseSelected(){
	var x=document.getElementById("slt");
	var p = x.options[x.selectedIndex];
	appendTa(p.value);	
	parseFile(p.value);
}

function toggleIsAllowedToRun(){
	var val = "true";
	var btn_batch_toggle = document.getElementById("btn_batch_toggle");
	if(is_allowed_to_run){
		val = "false";
		btn_batch_toggle.value = "Disable batch";
		is_allowed_to_run = false;
	}
	else{
		btn_batch_toggle.value = "Enable batch";
		is_allowed_to_run = true;
	}
	appendTa("Toggling is_allowed_to_run it is now "+val);
	
}

</script>
<body>
	<div id="header">
	
	<?php echo "You are loged in as <b>".$this->user_name.'</b>&nbsp; &nbsp; '; ?>
	
		<a href='/user/logout'>Logout</a> |  <a href='about:blank'>List Files</a> | <a href='/user/fileupload'>Upload File</a>
	<br/>
	</div>
<h2>Proces Files</h2>
<form name='stpw'><label for='time' >Stop Watch Time</label><input name='time' /></form>
	
	
<?php
$skipped_files = array();
//echo $this->form;
$date_format= 'h:i:s d-m-Y';
if(isset($this->user_file_directory_iterator)){
//	$c = ' class="user_process_file" ';
	echo "<b>Uploaded Files</b>";
//	Kint::dump($this->user_file_directory_iterator);
	$option = null;
	foreach ($this->user_file_directory_iterator as $file){
		//Kint::dump($fn);
		if($file->isDir()){
			continue; // to ignore . and ..			
		}
		$fn = $file->getFilename();
		$bn = basename($fn);
		$name = "<br>base name $bn size = ".$file->getSize().'kB';
		$q = $this->db->select()
			  ->from('price_parser_runs')
			  ->where('file_base_name = ?',$bn)
			  ->where('file_size = ?',$file->getSize())
		//	  ->where('status in (?)',"'parsing file', 'success'")
			  //->order('file_size DESC')
			  //->order('price_parser_run_id DESC')
			  ;
		$row = $this->db->fetchRow($q);
		if($row){ 
			if(strlen($row['status'])>1)
				$skipped_files[] = $row;
			if($row['status'] == 'success') // only skip if success
				continue;
		}
		$rows[] = $row;
		$unix_timestamp = $file->getCTime();
		$fs = round($file->getSize()/1024,1);
		$date = date($date_format, $unix_timestamp);
		if(!str_contains($bn,'.xml')){
			echo "<br>File name was not containing .xml";
			continue;
		}
		$value=$bn;
		$name="$bn - $fs - $date ";
		$option .= "\n\t<option value='$value' > $name</option >";
	//	echo "<tr><td $c ><input type='radio' name='filename' value='$fn'></td><td $c >$bn</td><td $c >$date</td><td $c>&nbsp;$fs kb</td> </tr>";
	}	
	if(is_null($option)){
		echo "There are no new files";
		Kint::dump($this->user_file_directory_iterator);
	}
	else{
		?>
		<form ><table><tr><td>
		<select id="slt" name="slt"  multiple="multiple" size="10" style="width:100%" > 
		<?php 
		echo utf8_encode($option);
		?>
		</select>
</td></tr><tr>
<td>
	<textarea rows="10" cols="80" id="ta"  width=100% ></textarea>
</td>
</tr>
</td>
<td>
	<div id="div_file_results" ></div>
</td>
</tr>
</table>
<button onclick="parseSelected();return false;" type="button" >Process File</button>
<button id="btn_start"  onclick="takeNextAndParse(false);"  type="button"  >Start batch</button>
<button id="btn_start_full"  onclick="takeNextAndParse(true);"  type="button"  >Start batch Reset Status</button>
<button id="btn_batch_toggle"  onclick="toggleIsAllowedToRun();"  type="button"  >Disable batch</button>
</form> <?
	}
}
else
{
	echo "Unable to process files - no iterator";
	echo "Directory ".nl2br(var_export($this,true));
}

?>

<?php 
						$table = $this->HtmlTable();
                		/* @var $table Zend_View_Helper_HtmlTable */
                		$table->setCaption('Allerede indlÃ¦ste filer');
                		//$table->
						// set table tag attributes
						$table->setAttribs(array(
						    'summary' => '', 'class' => 'bdp_std_table'
						));
						
						function getId(){
							return 'AgetId called' .Zend_Debug::dump(func_get_args(),'arg',false) ;
						}
						
						function getLinks(){	
							global $make_and_models;						
							$args = func_get_args();
							$pp_row = $args[0];
							$pp_id = $pp_row['price_parser_run_id'];
							$pp_status = $pp_row['status'];
							$name = $pp_row['file_base_name'];
							//Kint::dump($args) ;							
							//$row = array_search( array("car_model_id"=>$car_model_id),$make_and_models);
							$url='/user/procesfile/price_parser_run_id/'.$pp_id.'/reset_status/true';
							$a = " <a href='$url' target='ifr_parse' >Re-Process</a>";
							$row = null;
							$car_make_id = $row['car_make_id'];
							$car_model_name = $row['car_model_name'];
							$car_make_name = $row['car_make_name'];
							return $name.$a;
							//return 'getId called' .Zend_Debug::dump(func_get_args(),'arg',false) ;
							//return Zend_Debug::dump(func_get_args(),'arg',false) ;
						}
						
						function getAJavaScript(){	
							global $make_and_models;						
							$args = func_get_args();
							$car_model_id = $args[0];
							//Zend_Debug::dump($make_and_models,'$make_and_models '.$car_model_id,true) ;							
							//$row = array_search( array("car_model_id"=>$car_model_id),$make_and_models);
							$row = null;
							foreach($make_and_models as $make_and_model ){
								if($make_and_model['car_model_id']==$car_model_id){
									$row = $make_and_model;
									//echo "Row found";
								}
								//	Zend_Debug::dump($make_and_model,'$make_and_model id',true);
								//echo "<br> $model_id =>$model_name ";
							}	
							$car_make_id = $row['car_make_id'];
							$car_model_name = $row['car_model_name'];
							$car_make_name = $row['car_make_name'];
							//return 'getId called' .Zend_Debug::dump(func_get_args(),'arg',false) ;
							return "<a href='javascript:setMakeAndModel($car_make_id,$car_model_id)' "
								  .' title="VÃ¦lg '.$car_make_name." ".$car_model_name.'" '
								 // .' targer="_AnotherWindow" '
								  .' >'.$car_make_name." ".$car_model_name.'</a>';
							return 'getId called' .Zend_Debug::dump(func_get_args(),'arg',false) ;
						}
						
						function getSaveButton(){
							return '[Save]';
						}
						
						$table->setNotFoundText('No records found.');
/*						 ["price_parser_run_id"] => int(421)
  ["file_base_name"] => string(25) "nvautodele-Alfa Romeo.xml"
  ["file_create_time"] => string(19) "2011-07-06 22:46:26"
  ["file_size"] => int(189858)
  ["processing_start"] => NULL
  ["processing_end"] => NULL
  ["status"] => string(7) "success"
  ["last_elem_type"] => NULL
  ["last_elem_id"] => NULL
  ["created_by"] => NULL
  ["xml_http_request_id"] => int(52527)
  ["created"] => string(19) "2011-07-06 23:46:18"*/
						$table->setColumns(array(
						    'price_parser_run_id' => array(
						        'text' => 'Id',
						      //  'callback' => 'getId',
						      //  'class' => 'idClass',
						    ),
						    'file_base_name' => array('text' => 'file_base_name','callback'=>'getLinks'),
						    'file_size' => array('text' => 'file_size'),
						    'status' => array('text' => 'status'),
						    'created' => array('text' => 'created',						    )
						));
						
						$table->setAttrib('style','width: 100%;');
                		$table->setData($skipped_files);
                		
//echo "<h1>Priting rows</h1>";
?>
<style>#pageWrapper_ {width: 95%;} nooption_{width: 95%;} div#bdp-div-page {width: 95%; </style>
<iframe onload='iframeLoaded();' id='ifr_parse' name='ifr_parse' src ="about:blank" width="100%" height="300">
  <p>Your browser does not support iframes.</p>
</iframe>
<?php echo $table; ?>